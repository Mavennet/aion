<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="Aion graphical front-end">
    <property name="dir.lib" value="../lib"/>
    <property name="dir.mod" value="../mod"/>
    <property name="dir.resources" value="./resources"/>
    <property name="dir.dest" value="./build/main"/>
    <property name="dir.test" value="./build/test"/>
    <property name="test.report.dir" value="report"/>
    <property name="dir.javaAPIlib" value="../javaAPIlib"/>

    <path id="classpath.dependency">
    </path>

    <path id="classpath.test">
        <pathelement location="${dir.lib}/junit_4/junit-4.12.jar"/>
        <pathelement location="${dir.lib}/hamcrest/hamcrest-all-1.3.jar"/>
        <pathelement location="${dir.mod}/modGui.jar"/>
    </path>

    <target name="clean_build" depends="clean">
    	<antcall target="build">
        	<param name="compile.debug" value="${compile.debug}"/>
        </antcall>
    </target>


    <target name="clean">
        <delete dir="${dir.dest}" includeEmptyDirs="true" includes="**/*/"/>
        <delete dir="${dir.test}" includeEmptyDirs="true" includes="**/*/"/>
        <delete dir="${test.report.dir}"/>
        <delete file="${dir.mod}/modGui.jar"/>
    </target>

    <target name="test_build" depends="build">
        <mkdir dir="${dir.test}"/>
        <javac
                debug="on"
                debuglevel="source,lines,vars"
                includeantruntime="false"
                release="9"
                srcdir="./test"
                destdir="${dir.test}"
                includes="**/*Test.java"
        >
            <classpath>
                <path refid="classpath.test"/>
                <path refid="classpath.dependency"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="test_build">
        <mkdir dir="${test.report.dir}"/>
        <junit printsummary="on" haltonfailure="yes" fork="true">
            <classpath>
                <path refid="classpath.test"/>
                <path refid="classpath.dependency"/>
                <pathelement location="${dir.test}"/>
            </classpath>
            <formatter type="plain" usefile="false"/>
            <formatter type="xml"/>
            <batchtest todir="${test.report.dir}">
                <fileset dir="${src.test}" includes="**/*Test.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="build">
        <echo message="compiling with debug=${compile.debug}" />
        <mkdir dir="${dir.dest}"/>
        <javac
                debug="${compile.debug}"
                debuglevel="source,lines,vars"
                includeantruntime="false"
                release="9"
                srcdir="./"
                destdir="${dir.dest}"
                includes="src/**/*.java,module-info.java"
        >
            <modulepath> 
                <pathelement location="${dir.mod}/modLogger.jar"/>
                <pathelement location="${dir.mod}/modMcf.jar"/>
                <pathelement location="${dir.mod}/modAionImpl.jar"/>
                <pathelement location="${dir.lib}/slf4j-api-1.7.25.jar"/>
                <pathelement location="${dir.lib}/guava-19.0.jar" />
                <!-- FIXME: massive HACK, figure out how to reference this in a smarter way...  probably the top-level build.xml needs to be aware of aion_api -->
                <!--<pathelement location="${dir.lib}/../aion_api/pack/modAionApi-v0.1.7.fe02037-2018-06-11.jar" />-->
                <pathelement location="${dir.lib}/../aion_api/pack/modAionApi.jar" />
            </modulepath>
        </javac>

        <copy todir="${dir.dest}">
            <fileset dir="${dir.resources}" />
        </copy>

        <jar
                destfile="modGui.jar"
                filesetmanifest="mergewithoutmain"
                basedir="${dir.dest}"
        />
        <move includeemptydirs="false" todir="${dir.mod}">
            <file file="modGui.jar"/>
        </move>
    </target>
</project>
